• Usage
    ○ Driver Points Tracking API: Can be used to create an
    an API endpoint that allows sponsors to view and manage
    driver points. Django REST framework's (DRF) serializers
    can help in converting these point transactions into
    JSON format for easy communication between the frontend
    and the backend.

    ○ Catalog of Incentive Products: The catalog of products
    can be exposed through DRF API. The DRF API can fetch
    product information from an external API. DRF can handle
    the serialization of this product into JSON, including
    name, availability, price in points, description,
    images, etc.

    ○ User Authentication and Authorization: DRF provides a
    robust authentication and authroization system. DRF 
    permission classes can be used to ensure that only
    authorized users can access specific endpoints, such as 
    approving driver applications or making point changes.

    ○ Reports Generation: Custom API endpoints can retrieve
    the data and the DRF's serializers can format the data.

    ○ Secure Data Transmission: DRF can help enusre secure
    data transmission by supporting HTTPS. It's a best
    practice to encrypt data sent between the client and the
    server.

    ○ Password Reset System: DRF can be extended to include
    a password reset functionality.

    ○ Audit Logging: Custom API endpoints can log,
    serialize, and store events in the database for later
    retrieval.


• How to Create a REST API: https://www.youtube.com/watch?v=c708Nf0cHrs
    ○ Timestamps for all topics concerning REST APIs in the 
    description.

• Documentation: https://www.django-rest-framework.org/
