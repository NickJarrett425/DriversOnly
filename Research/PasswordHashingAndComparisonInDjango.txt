Passwords will be stored as a delimited string (separated by $) that is comprised of 4 parts 
   1. The algorithm 
   2. The number of iterations
   3. The salt
   4. The Password hash


        
The algorithm is the method of how the password will be hashed. 
        A list of algorithms are on this webpage: https://docs.djangoproject.com/en/4.2/topics/auth/passwords/#:~:text=By%20default%2C%20Django%20uses%20the,of%20computing%20time%20to%20break.


The number of iterations (also called the work factor) is the number of times the password will be hashed through the chosen algorithm.


The salt is a random set of characters or numbers that is either appended or prepended on to the password. It is generated when the password is originally created


The password hash is just the actual hash when the algorithm is finished




The way that the comparison takes place is by querying the database for this delimited string, then using that information to run the user input through the algorithm and comparing the ending hash. If there is a match, then you have the correct password.


Password hashing article: https://docs.djangoproject.com/en/4.2/topics/auth/passwords/#module-django.contrib.auth.password_validation


The function django.contrib.auth.authenticate is used for authenticating